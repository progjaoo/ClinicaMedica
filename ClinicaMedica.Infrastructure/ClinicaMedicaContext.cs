// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;

namespace ClinicaMedica.Core.Entidades;

public partial class ClinicaMedicaContext : DbContext
{
    public ClinicaMedicaContext(DbContextOptions<ClinicaMedicaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Anexo> Anexos { get; set; }

    public virtual DbSet<Atendimento> Atendimentos { get; set; }

    public virtual DbSet<Medico> Medicos { get; set; }

    public virtual DbSet<Paciente> Pacientes { get; set; }

    public virtual DbSet<Servico> Servicos { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Anexo>(entity =>
        {
            entity.HasKey(e => e.IdAnexo).HasName("PK__Anexo__8C1FE27125629E91");

            entity.ToTable("Anexo");

            entity.Property(e => e.NomeArquivo)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Atendimento>(entity =>
        {
            entity.HasKey(e => e.IdAtendimento).HasName("PK__Atendime__84DAE47FF6FFD385");

            entity.ToTable("Atendimento");

            entity.HasIndex(e => e.IdPaciente, "Atendimento_FKIndex1");

            entity.HasIndex(e => e.IdMedico, "Atendimento_FKIndex2");

            entity.HasIndex(e => e.IdServico, "Atendimento_FKIndex3");

            entity.Property(e => e.DataFim).HasPrecision(0);
            entity.Property(e => e.DataInicio).HasPrecision(0);
        });

        modelBuilder.Entity<Medico>(entity =>
        {
            entity.HasKey(e => e.IdMedico).HasName("PK__Medico__C326E652999139C6");

            entity.ToTable("Medico");

            entity.Property(e => e.Celular)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Crm)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("CRM");
            entity.Property(e => e.DataCadastro).HasPrecision(0);
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Endereco)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Especialidade)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Paciente>(entity =>
        {
            entity.HasKey(e => e.IdPaciente).HasName("PK__Paciente__C93DB49BFF388425");

            entity.ToTable("Paciente");

            entity.Property(e => e.Celular)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.Cpf)
                .HasMaxLength(14)
                .IsUnicode(false)
                .HasColumnName("CPF");
            entity.Property(e => e.DataCadastro).HasPrecision(0);
            entity.Property(e => e.DataNasc).HasPrecision(0);
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Endereco)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.TipoSanguineo)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Servico>(entity =>
        {
            entity.HasKey(e => e.IdServico).HasName("PK__Servico__474DDE3A83BAE910");

            entity.ToTable("Servico");

            entity.Property(e => e.Descricao)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Duracao)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NomeServico)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.Preco).HasColumnType("decimal(10, 0)");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuario__5B65BF97FEB73D6A");

            entity.ToTable("Usuario");

            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Nome)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Papel)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Senha)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}